/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MaliciousReceiver,
  MaliciousReceiverInterface,
} from "../../../contracts/MaliciousReceiver.sol/MaliciousReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IMyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101c58061001f6000396000f3fe6080604052600436106100385760003560e01c806326a4e8d21461004457806364dd891a14610083578063fc0c546a146100a357600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061008161005f366004610146565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561008f57600080fd5b5061008161009e366004610176565b6100df565b3480156100af57600080fd5b506000546100c3906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60005460405163da95ebf760e01b8152306004820152602481018390526001600160a01b039091169063da95ebf790604401600060405180830381600087803b15801561012b57600080fd5b505af115801561013f573d6000803e3d6000fd5b5050505050565b60006020828403121561015857600080fd5b81356001600160a01b038116811461016f57600080fd5b9392505050565b60006020828403121561018857600080fd5b503591905056fea2646970667358221220b20ef677a7271c774648b92527be4df60d1419990b2657ad2056fd600d5a878764736f6c634300081e0033";

type MaliciousReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousReceiver__factory extends ContractFactory {
  constructor(...args: MaliciousReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MaliciousReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousReceiver__factory {
    return super.connect(runner) as MaliciousReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousReceiverInterface {
    return new Interface(_abi) as MaliciousReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousReceiver {
    return new Contract(address, _abi, runner) as unknown as MaliciousReceiver;
  }
}
